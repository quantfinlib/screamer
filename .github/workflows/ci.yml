name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Install dependencies
      run: poetry install

    - name: Install CMake
      uses: lukka/get-cmake@latest

    # Build Step for Windows
    - name: Build with CMake (Windows)
      if: runner.os == 'Windows'
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build . --config Debug

    # Build Step for Linux and macOS
    - name: Build with CMake (Linux and macOS)
      if: runner.os != 'Windows'
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build .

    - name: List screamer directory
      run: |
        dir screamer

    # Run C++ Tests on Windows
    - name: Run C++ Tests (Windows)
      if: runner.os == 'Windows'
      run: |
        cd build
        ctest --output-on-failure -C Debug

    # Run C++ Tests on Linux and macOS
    - name: Run C++ Tests (Linux and macOS)
      if: runner.os != 'Windows'
      run: |
        cd build
        ctest --output-on-failure

    # Run Python Tests
    - name: Run Python Tests
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        poetry run pytest
